{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React from \"react\";\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport processColor from \"react-native-web/dist/exports/processColor\";\nimport Colors from \"../Themes/Colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Chart = function (_React$Component) {\n  _inherits(Chart, _React$Component);\n  var _super = _createSuper(Chart);\n  function Chart() {\n    var _this;\n    _classCallCheck(this, Chart);\n    _this = _super.call(this);\n    _this.state = {\n      legend: {\n        enabled: false\n      },\n      data: {\n        dataSets: [{\n          values: [{\n            y: 60\n          }, {\n            y: 50\n          }, {\n            y: 70\n          }, {\n            y: 90\n          }, {\n            y: 85\n          }, {\n            y: 60\n          }, {\n            y: 50\n          }, {\n            y: 70\n          }, {\n            y: 80\n          }, {\n            y: 10\n          }, {\n            y: 30\n          }, {\n            y: 20\n          }],\n          label: \"Bar dataSet\",\n          config: {\n            color: processColor(Colors.blue),\n            borderRadius: 10,\n            valueTextSize: 12,\n            valueTextColor: processColor(Colors.blueOpacityFont)\n          }\n        }],\n        config: {\n          barWidth: 0.6\n        }\n      },\n      xAxis: {\n        drawGridLines: false,\n        position: \"BOTTOM\",\n        valueFormatter: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n        granularityEnabled: true,\n        granularity: 1,\n        textSize: 12,\n        textColor: processColor(Colors.blueOpacityFont)\n      },\n      yAxis: {\n        left: {\n          gridColor: processColor(Colors.graphGridLine),\n          valueFormatter: \"#K\",\n          textSize: 12,\n          textColor: processColor(Colors.blueOpacityFont)\n        },\n        right: {\n          drawGridLines: false,\n          enabled: false\n        }\n      }\n    };\n    return _this;\n  }\n  _createClass(Chart, [{\n    key: \"handleSelect\",\n    value: function handleSelect(event) {\n      var entry = event.nativeEvent;\n      if (entry == null) {\n        this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n          selectedEntry: null\n        }));\n      } else {\n        this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n          selectedEntry: JSON.stringify(entry)\n        }));\n      }\n      console.log(event.nativeEvent);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _jsx(View, {\n        style: {\n          flex: 1\n        },\n        children: _jsx(View, {\n          style: styles.container\n        })\n      });\n    }\n  }]);\n  return Chart;\n}(React.Component);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  chart: {\n    flex: 1,\n    height: 300\n  }\n});\nexport default Chart;","map":{"version":3,"names":["React","AppRegistry","StyleSheet","Text","View","processColor","Colors","jsx","_jsx","Chart","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","call","state","legend","enabled","data","dataSets","values","y","label","config","color","blue","borderRadius","valueTextSize","valueTextColor","blueOpacityFont","barWidth","xAxis","drawGridLines","position","valueFormatter","granularityEnabled","granularity","textSize","textColor","yAxis","left","gridColor","graphGridLine","right","_createClass","key","value","handleSelect","event","entry","nativeEvent","setState","_objectSpread","selectedEntry","JSON","stringify","console","log","render","style","flex","children","styles","container","Component","create","chart","height"],"sources":["/Users/gauravjain/CodeTown/invictus-ui/Src/Components/Chart.js"],"sourcesContent":["// import { StyleSheet, Text, View } from \"react-native\";\n// import React from \"react\";\n// import { SCREEN_WIDTH } from \"../Themes/Fonts\";\n// import Colors from \"../Themes/Colors\";\n// import {\n//   VictoryBar,\n//   VictoryChart,\n//   VictoryLabel,\n//   VictoryTheme,\n// } from \"victory-native\";\n// import { heightPercentageToDP as hp } from \"react-native-responsive-screen\";\n// import { LineChart } from \"react-native-charts-wrapper\";\n// export default function Chart() {\n//   const data = [\n//     { quarter: \"Sun\", earnings: 80 },\n//     { quarter: \"Mon\", earnings: 75 },\n//     { quarter: \"Tue\", earnings: 50 },\n//     { quarter: \"Wed\", earnings: 90 },\n//     { quarter: \"Thu\", earnings: 70 },\n//     { quarter: \"Fri\", earnings: 60 },\n//     { quarter: \"Sat\", earnings: 50 },\n//   ];\n\n//   return (\n//     <View style={styles.container}>\n//       <VictoryChart\n//         width={SCREEN_WIDTH - hp(2)}\n//         height={280}\n//         theme={VictoryTheme.material}\n//       >\n//         <VictoryBar\n//           style={{\n//             data: { fill: Colors.blue },\n//           }}\n//           cornerRadius={{ top: 5 }}\n//           data={data}\n//           // alignment={\"start\"}\n//           x=\"quarter\"\n//           y=\"earnings\"\n//           labels={({ datum }) => `${datum.earnings}`}\n//         />\n//       </VictoryChart>\n//       <LineChart\n//         style={{ height: 500, flex: 1 }}\n//         data={{\n//           dataSets: [{ label: \"demo\", values: [{ y: 1 }, { y: 2 }, { y: 1 }] }],\n//         }}\n//       />\n//     </View>\n//   );\n// }\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     justifyContent: \"center\",\n//     alignItems: \"center\",\n//     // backgroundColor: \"#f5fcff\",\n//   },\n// });\n\nimport React from \"react\";\nimport {\n  AppRegistry,\n  StyleSheet,\n  Text,\n  View,\n  processColor,\n} from \"react-native\";\n\n// import { BarChart } from \"react-native-charts-wrapper\";\nimport Colors from \"../Themes/Colors\";\n\nclass Chart extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      legend: {\n        enabled: false,\n      },\n      data: {\n        dataSets: [\n          {\n            values: [\n              { y: 60 },\n              { y: 50 },\n              { y: 70 },\n              { y: 90 },\n              { y: 85 },\n              { y: 60 },\n              { y: 50 },\n              { y: 70 },\n              { y: 80 },\n              { y: 10 },\n              { y: 30 },\n              { y: 20 },\n            ],\n            label: \"Bar dataSet\",\n            config: {\n              color: processColor(Colors.blue),\n              borderRadius: 10,\n              valueTextSize: 12,\n              valueTextColor: processColor(Colors.blueOpacityFont),\n            },\n          },\n        ],\n\n        config: {\n          barWidth: 0.6,\n        },\n      },\n      xAxis: {\n        drawGridLines: false,\n        position: \"BOTTOM\",\n        valueFormatter: [\n          \"Jan\",\n          \"Feb\",\n          \"Mar\",\n          \"Apr\",\n          \"May\",\n          \"Jun\",\n          \"Jul\",\n          \"Aug\",\n          \"Sep\",\n          \"Oct\",\n          \"Nov\",\n          \"Dec\",\n        ],\n        granularityEnabled: true,\n        granularity: 1,\n        textSize: 12,\n        textColor: processColor(Colors.blueOpacityFont),\n      },\n      yAxis: {\n        left: {\n          // drawGridLines: false,\n          gridColor: processColor(Colors.graphGridLine),\n          valueFormatter: \"#K\",\n          textSize: 12,\n          textColor: processColor(Colors.blueOpacityFont),\n        },\n        right: { drawGridLines: false, enabled: false },\n      },\n    };\n  }\n\n  handleSelect(event) {\n    let entry = event.nativeEvent;\n    if (entry == null) {\n      this.setState({ ...this.state, selectedEntry: null });\n    } else {\n      this.setState({ ...this.state, selectedEntry: JSON.stringify(entry) });\n    }\n\n    console.log(event.nativeEvent);\n  }\n\n  render() {\n    return (\n      <View style={{ flex: 1 }}>\n        <View style={styles.container}>\n          {/* <BarChart\n            style={styles.chart}\n            data={this.state.data}\n            xAxis={this.state.xAxis}\n            animation={{ durationX: 1000 }}\n            legend={this.state.legend}\n            gridBackgroundColor={processColor(\"#ffffff\")}\n            visibleRange={{ x: { min: 6, max: 6 } }}\n            yAxis={this.state.yAxis}\n            chartDescription={{ text: \"\" }}\n            // drawBarShadow={false}\n            // drawValueAboveBar={true}\n            // drawHighlightArrow={true}\n            onSelect={this.handleSelect.bind(this)}\n            // highlights={this.state.highlights}\n            onChange={(event) => console.log(event.nativeEvent)}\n            pinchZoom={false}\n          /> */}\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    // backgroundColor: \"#F5FCFF\",\n  },\n  chart: {\n    flex: 1,\n    height: 300,\n  },\n});\n\nexport default Chart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}