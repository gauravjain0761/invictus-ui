{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport PureChart from \"react-native-pure-chart\";\nimport moment from \"moment\";\nimport Colors from \"../Themes/Colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar NewChart = function (_React$Component) {\n  _inherits(NewChart, _React$Component);\n  var _super = _createSuper(NewChart);\n  function NewChart(props) {\n    var _this;\n    _classCallCheck(this, NewChart);\n    _this = _super.call(this, props);\n    _this.state = {\n      data: []\n    };\n    return _this;\n  }\n  _createClass(NewChart, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.generateData();\n    }\n  }, {\n    key: \"generateData\",\n    value: function generateData() {\n      var data = [];\n      var startDate = moment();\n      for (var i = 0; i < 10; i++) {\n        startDate.add(1, \"days\");\n        data.push({\n          x: startDate.format(\"YYYY-MM-DD\"),\n          y: Math.round(Math.random() * 500)\n        });\n      }\n      this.setState({\n        data: [{\n          data: data,\n          color: Colors.blue\n        }]\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(View, {\n          style: {\n            height: 20\n          }\n        }), _jsx(PureChart, {\n          type: \"bar\",\n          data: this.state.data,\n          height: 200\n        })]\n      });\n    }\n  }]);\n  return NewChart;\n}(React.Component);\nexport { NewChart as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"names":["React","StyleSheet","Text","View","Button","PureChart","moment","Colors","jsx","_jsx","jsxs","_jsxs","NewChart","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","state","data","_createClass","key","value","componentDidMount","generateData","startDate","i","add","push","x","format","y","Math","round","random","setState","color","blue","render","style","styles","container","children","height","type","Component","default","create","flex"],"sources":["/Users/gauravjain/CodeTown/invictus-ui/Src/Components/NewChart.js"],"sourcesContent":["import React from \"react\";\nimport { StyleSheet, Text, View, Button } from \"react-native\";\nimport PureChart from \"react-native-pure-chart\";\n\nimport moment from \"moment\";\nimport Colors from \"../Themes/Colors\";\nexport default class NewChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n    };\n  }\n\n  componentDidMount() {\n    this.generateData();\n  }\n\n  generateData() {\n    var data = [];\n    var startDate = moment();\n    for (var i = 0; i < 10; i++) {\n      startDate.add(1, \"days\");\n      data.push({\n        x: startDate.format(\"YYYY-MM-DD\"),\n        y: Math.round(Math.random() * 500),\n      });\n    }\n    this.setState({\n      data: [\n        {\n          data: data,\n          color: Colors.blue,\n        },\n      ],\n    });\n  }\n  render() {\n    return (\n      <View style={styles.container}>\n        {/* <PureChart\n            type={\"line\"}\n            data={this.state.data}\n            width={\"100%\"}\n            height={100}\n            onPress={(a) => {\n              console.log(\"onPress\", a);\n            }}\n            xAxisColor={\"black\"}\n            yAxisColor={\"red\"}\n            xAxisGridLineColor={\"red\"}\n            yAxisGridLineColor={\"red\"}\n            minValue={10}\n            labelColor={\"red\"}\n            showEvenNumberXaxisLabel={false}\n            customValueRenderer={(index, point) => {\n              if (index < 3) return null;\n              return <Text style={{ textAlign: \"center\" }}>{point.y}</Text>;\n            }}\n          /> */}\n        <View style={{ height: 20 }} />\n        <PureChart\n          type={\"bar\"}\n          data={this.state.data}\n          height={200}\n          //   xAxisColor={\"red\"}\n          //   yAxisColor={\"red\"}\n          //   xAxisGridLineColor={\"red\"}\n          //   yAxisGridLineColor={\"red\"}\n          //   labelColor={\"red\"}\n          //   numberOfYAxisGuideLine={10}\n        />\n        {/* <PureChart type={\"bar\"} data={this.state.data} /> */}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n"],"mappings":";;;;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAE1B,OAAOC,SAAS,MAAM,yBAAyB;AAE/C,OAAOC,MAAM,MAAM,QAAQ;AAC3B,OAAOC,MAAM;AAAyB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAAA,IACjBC,QAAQ,aAAAC,gBAAA;EAAAC,SAAA,CAAAF,QAAA,EAAAC,gBAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,QAAA;EAC3B,SAAAA,SAAYK,KAAK,EAAE;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAP,QAAA;IACjBM,KAAA,GAAAH,MAAA,CAAAK,IAAA,OAAMH,KAAK;IACXC,KAAA,CAAKG,KAAK,GAAG;MACXC,IAAI,EAAE;IACR,CAAC;IAAC,OAAAJ,KAAA;EACJ;EAACK,YAAA,CAAAX,QAAA;IAAAY,GAAA;IAAAC,KAAA,EAED,SAAAC,kBAAA,EAAoB;MAClB,IAAI,CAACC,YAAY,CAAC,CAAC;IACrB;EAAC;IAAAH,GAAA;IAAAC,KAAA,EAED,SAAAE,aAAA,EAAe;MACb,IAAIL,IAAI,GAAG,EAAE;MACb,IAAIM,SAAS,GAAGtB,MAAM,CAAC,CAAC;MACxB,KAAK,IAAIuB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;QAC3BD,SAAS,CAACE,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC;QACxBR,IAAI,CAACS,IAAI,CAAC;UACRC,CAAC,EAAEJ,SAAS,CAACK,MAAM,CAAC,YAAY,CAAC;UACjCC,CAAC,EAAEC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG;QACnC,CAAC,CAAC;MACJ;MACA,IAAI,CAACC,QAAQ,CAAC;QACZhB,IAAI,EAAE,CACJ;UACEA,IAAI,EAAEA,IAAI;UACViB,KAAK,EAAEhC,MAAM,CAACiC;QAChB,CAAC;MAEL,CAAC,CAAC;IACJ;EAAC;IAAAhB,GAAA;IAAAC,KAAA,EACD,SAAAgB,OAAA,EAAS;MACP,OACE9B,KAAA,CAACR,IAAI;QAACuC,KAAK,EAAEC,MAAM,CAACC,SAAU;QAAAC,QAAA,GAqB5BpC,IAAA,CAACN,IAAI;UAACuC,KAAK,EAAE;YAAEI,MAAM,EAAE;UAAG;QAAE,CAAE,CAAC,EAC/BrC,IAAA,CAACJ,SAAS;UACR0C,IAAI,EAAE,KAAM;UACZzB,IAAI,EAAE,IAAI,CAACD,KAAK,CAACC,IAAK;UACtBwB,MAAM,EAAE;QAAI,CAOb,CAAC;MAAA,CAEE,CAAC;IAEX;EAAC;EAAA,OAAAlC,QAAA;AAAA,EArEmCZ,KAAK,CAACgD,SAAS;AAAA,SAAhCpC,QAAQ,IAAAqC,OAAA;AAwE7B,IAAMN,MAAM,GAAG1C,UAAU,CAACiD,MAAM,CAAC;EAC/BN,SAAS,EAAE;IACTO,IAAI,EAAE;EACR;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}