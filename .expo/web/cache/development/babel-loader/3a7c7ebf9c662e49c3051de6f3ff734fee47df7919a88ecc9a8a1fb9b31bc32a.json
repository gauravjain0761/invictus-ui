{"ast":null,"code":"import _ from 'lodash';\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar SINGLE_SERIES_WITH_NUMBERS = 0;\nvar SINGLE_SERIES_WITH_OBJECTS = 1;\nvar MULTI_SERIES = 2;\nfunction flattenData(data) {\n  var numberCount = 0;\n  var objectWithYCount = 0;\n  var multiSeriesCount = 0;\n  var length = data.length;\n  data.map(function (obj) {\n    if (typeof obj === 'number') {\n      numberCount++;\n    } else if (typeof obj === 'object') {\n      if (typeof obj.y === 'number') {\n        objectWithYCount++;\n      } else if (Array.isArray(obj.data)) {\n        multiSeriesCount++;\n      }\n    }\n  });\n  if (numberCount === length || objectWithYCount === length) {\n    return [{\n      seriesName: '',\n      data: data\n    }];\n  } else if (multiSeriesCount === length) {\n    return data;\n  } else {\n    return [{\n      seriesName: '',\n      data: []\n    }];\n  }\n}\nfunction getMaxValue(data) {\n  var values = [];\n  data.map(function (value) {\n    if (typeof value === 'number') {\n      values.push(value);\n    } else if (typeof value === 'object') {\n      if (typeof value.y === 'number') {\n        values.push(value.y);\n      } else if (Array.isArray(value.data)) {\n        value.data.map(function (v) {\n          if (typeof v === 'number') {\n            values.push(v);\n          } else if (typeof v === 'object' && typeof v.y === 'number') {\n            values.push(v.y);\n          }\n        });\n      }\n    }\n  });\n  if (values.length === 0) return 0;\n  return Math.max.apply(null, values);\n}\nexport var initData = function initData(dataProp, height, gap) {\n  var numberOfPoints = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 5;\n  var guideArray, max, sortedData;\n  if (!dataProp || !Array.isArray(dataProp) || dataProp.length === 0) {\n    return {\n      sortedData: [],\n      max: 0,\n      guideArray: []\n    };\n  }\n  max = getMaxValue(dataProp);\n  guideArray = getGuideArray(max, height, numberOfPoints);\n  dataProp = flattenData(dataProp);\n  sortedData = refineData(dataProp, max, height, gap);\n  return {\n    sortedData: sortedData,\n    max: max,\n    selectedIndex: null,\n    nowHeight: 200,\n    nowWidth: 200,\n    scrollPosition: 0,\n    nowX: 0,\n    nowY: 0,\n    guideArray: guideArray\n  };\n};\nexport var refineData = function refineData(flattenData, max, height, gap) {\n  var result = [];\n  flattenData.map(function (series) {\n    var dataProp = series.data;\n    var object = {\n      seriesName: series.seriesName,\n      seriesColor: series.color\n    };\n    var data = [];\n    var length = dataProp.length;\n    var simpleTypeCount = 0;\n    var objectTypeCount = 0;\n    for (var i = 0; i < length; i++) {\n      var maxClone = max;\n      if (maxClone === 0) {\n        maxClone = 1;\n      }\n      var dataObject = {};\n      if (typeof dataProp[i] === 'number') {\n        simpleTypeCount++;\n        dataObject.ratioY = dataProp[i] / maxClone * height;\n        dataObject.y = dataProp[i];\n        dataObject = {\n          gap: i * gap,\n          ratioY: dataProp[i] / maxClone * height,\n          y: dataProp[i]\n        };\n      } else if (typeof dataProp[i] === 'object') {\n        var isEmpty = false;\n        if (dataProp[i].y === null) {\n          var nullCount = 0;\n          for (var j = i; j < dataProp.length; j++) {\n            if (dataProp[j].y) {\n              break;\n            } else {\n              nullCount++;\n            }\n          }\n          dataProp[i].y = dataProp[i - 1].y + (dataProp[i + nullCount].y - dataProp[i - 1].y) / (nullCount + 1);\n          isEmpty = true;\n        }\n        if (typeof dataProp[i].y === 'number' && dataProp[i].x) {\n          objectTypeCount++;\n          dataObject = {\n            gap: i * gap,\n            ratioY: dataProp[i].y / maxClone * height,\n            x: dataProp[i].x,\n            y: dataProp[i].y,\n            isEmpty: isEmpty\n          };\n        }\n      }\n      data.push(dataObject);\n    }\n    var isValidate = false;\n    if (simpleTypeCount === length || objectTypeCount === length) {\n      isValidate = true;\n    }\n    if (isValidate) {\n      object.data = data.sort(function (a, b) {\n        return a['gap'] - b['gap'];\n      });\n    } else {\n      object.data = [];\n    }\n    result.push(object);\n  });\n  return result;\n};\nexport var getGuideArray = function getGuideArray(max, height) {\n  var numberOfPoints = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 5;\n  var x = parseInt(max);\n  var arr = [];\n  var length;\n  var temp;\n  var postfix = '';\n  if (x === 0) {\n    return [];\n  }\n  if (x > -1 && x < 1000) {\n    x = Math.round(x * 10);\n    temp = 1;\n  } else if (x >= 1000 && x < 1000000) {\n    postfix = 'K';\n    x = Math.round(x / 100);\n    temp = 1000;\n  } else if (x >= 1000000 && x < 1000000000) {\n    postfix = 'M';\n    x = Math.round(x / 100000);\n    temp = 1000000;\n  } else {\n    postfix = 'B';\n    x = Math.round(x / 100000000);\n    temp = 1000000000;\n  }\n  length = x.toString().length;\n  x = _.round(x, -1 * length + 1) / 10;\n  var first = parseInt(x.toString()[0]);\n  if (first > -1 && first < 3) {\n    x = 2.5 * x / first;\n  } else if (first > 2 && first < 6) {\n    x = 5 * x / first;\n  } else {\n    x = 10 * x / first;\n  }\n  for (var i = 1; i < numberOfPoints + 1; i++) {\n    var v = x / numberOfPoints * i;\n    arr.push([v + postfix, v * temp / max * height, 1 * temp / max * height]);\n  }\n  return arr;\n};\nexport var drawYAxis = function drawYAxis() {\n  var color = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '#e0e0e0';\n  return _jsx(View, {\n    style: {\n      borderRightWidth: 1,\n      borderColor: color,\n      width: 1,\n      height: '100%',\n      marginRight: 0\n    }\n  });\n};\nexport var drawYAxisLabels = function drawYAxisLabels(arr, height, minValue) {\n  var color = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '#000000';\n  return _jsx(View, {\n    style: {\n      width: 33,\n      height: height,\n      justifyContent: 'flex-end',\n      alignItems: 'flex-end',\n      marginBottom: minValue && arr && arr.length > 0 ? -1 * arr[0][2] * minValue : null,\n      overflow: 'hidden'\n    },\n    children: arr.length === 0 ? _jsx(View, {\n      style: {\n        bottom: 0,\n        position: 'absolute'\n      },\n      children: _jsx(Text, {\n        style: {\n          fontSize: 11\n        },\n        children: \"0\"\n      })\n    }, 'guide0') : arr.map(function (v, i) {\n      if (v[1] > height) return null;\n      return _jsx(View, {\n        style: {\n          bottom: v[1] - 5,\n          position: 'absolute'\n        },\n        children: _jsx(Text, {\n          style: {\n            fontSize: 11,\n            color: color\n          },\n          children: v[0]\n        })\n      }, 'guide' + i);\n    })\n  });\n};\nexport var drawGuideLine = function drawGuideLine(arr) {\n  var color = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '#e0e0e0';\n  return _jsx(View, {\n    style: {\n      width: '100%',\n      height: '100%',\n      position: 'absolute'\n    },\n    children: arr.map(function (v, i) {\n      return _jsx(View, {\n        style: {\n          width: '100%',\n          borderTopWidth: 1,\n          borderTopColor: color,\n          bottom: v[1],\n          position: 'absolute'\n        }\n      }, 'guide' + i);\n    })\n  });\n};\nexport var numberWithCommas = function numberWithCommas(x) {\n  var summary = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var postfix = '';\n  if (summary) {\n    if (x >= 1000 && x < 1000000) {\n      postfix = 'K';\n      x = Math.round(x / 100) / 10;\n    } else if (x >= 1000000 && x < 1000000000) {\n      postfix = 'M';\n      x = Math.round(x / 100000) / 10;\n    } else if (x >= 1000000000 && x < 1000000000000) {\n      postfix = 'B';\n      x = Math.round(x / 100000000) / 10;\n    }\n  }\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',') + postfix;\n};\nexport var drawXAxis = function drawXAxis() {\n  var color = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '#e0e0e0';\n  return _jsx(View, {\n    style: {\n      width: '100%',\n      borderTopWidth: 1,\n      borderTopColor: color\n    }\n  });\n};\nexport var drawXAxisLabels = function drawXAxisLabels(sortedData, gap) {\n  var color = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '#000000';\n  var showEvenNumberXaxisLabel = arguments.length > 3 ? arguments[3] : undefined;\n  return _jsx(View, {\n    style: {\n      width: '100%',\n      paddingVertical: 10,\n      height: 10\n    },\n    children: sortedData.map(function (data, i) {\n      if (data['x'] && i % 2 === 1 || !showEvenNumberXaxisLabel) {\n        return _jsx(View, {\n          style: {\n            position: 'absolute',\n            left: data['gap'] - gap / 2,\n            width: gap,\n            alignItems: 'center'\n          },\n          children: _jsx(Text, {\n            style: {\n              fontSize: 9,\n              color: color\n            },\n            children: data['x']\n          })\n        }, 'label' + i);\n      } else {\n        return null;\n      }\n    })\n  });\n};","map":{"version":3,"names":["_","React","View","Text","jsx","_jsx","SINGLE_SERIES_WITH_NUMBERS","SINGLE_SERIES_WITH_OBJECTS","MULTI_SERIES","flattenData","data","numberCount","objectWithYCount","multiSeriesCount","length","map","obj","y","Array","isArray","seriesName","getMaxValue","values","value","push","v","Math","max","apply","initData","dataProp","height","gap","numberOfPoints","arguments","undefined","guideArray","sortedData","getGuideArray","refineData","selectedIndex","nowHeight","nowWidth","scrollPosition","nowX","nowY","result","series","object","seriesColor","color","simpleTypeCount","objectTypeCount","i","maxClone","dataObject","ratioY","isEmpty","nullCount","j","x","isValidate","sort","a","b","parseInt","arr","temp","postfix","round","toString","first","drawYAxis","style","borderRightWidth","borderColor","width","marginRight","drawYAxisLabels","minValue","justifyContent","alignItems","marginBottom","overflow","children","bottom","position","fontSize","drawGuideLine","borderTopWidth","borderTopColor","numberWithCommas","summary","replace","drawXAxis","drawXAxisLabels","showEvenNumberXaxisLabel","paddingVertical","left"],"sources":["/Users/gauravjain/CodeTown/invictus-ui/node_modules/react-native-pure-chart/examples/pure-chart/common.js"],"sourcesContent":["import _ from 'lodash'\nimport React from 'react'\nimport {View, Text} from 'react-native'\n\nconst SINGLE_SERIES_WITH_NUMBERS = 0\nconst SINGLE_SERIES_WITH_OBJECTS = 1\nconst MULTI_SERIES = 2\n\nfunction flattenData (data) {\n  let numberCount = 0\n  let objectWithYCount = 0\n  let multiSeriesCount = 0\n  let length = data.length\n  data.map((obj) => {\n    if (typeof obj === 'number') {\n      numberCount++\n    } else if (typeof obj === 'object') {\n      if (typeof obj.y === 'number') {\n        objectWithYCount++\n      } else if (Array.isArray(obj.data)) {\n        multiSeriesCount++\n      }\n    }\n  })\n\n  if (numberCount === length || objectWithYCount === length) {\n    return [{\n      seriesName: '',\n      data: data\n    }]\n  } else if (multiSeriesCount === length) {\n    return data\n  } else {\n    return [{\n      seriesName: '',\n      data: []\n    }]\n  }\n}\n\nfunction getMaxValue (data) {\n  let values = []\n\n  data.map((value) => {\n    if (typeof value === 'number') {\n      values.push(value)\n    } else if (typeof value === 'object') {\n      if (typeof value.y === 'number') {\n        values.push(value.y)\n      } else if (Array.isArray(value.data)) {\n        value.data.map((v) => {\n          if (typeof v === 'number') {\n            values.push(v)\n          } else if (typeof v === 'object' && typeof v.y === 'number') {\n            values.push(v.y)\n          }\n        })\n      }\n    }\n  })\n\n  if (values.length === 0) return 0\n\n  return Math.max.apply(null, values)\n}\n\nexport const initData = (dataProp, height, gap, numberOfPoints = 5) => {\n  let guideArray, max, sortedData\n  if (!dataProp || !Array.isArray(dataProp) || dataProp.length === 0) {\n    return {\n      sortedData: [],\n      max: 0,\n      guideArray: []\n    }\n  }\n\n  max = getMaxValue(dataProp)\n  guideArray = getGuideArray(max, height, numberOfPoints)\n\n  dataProp = flattenData(dataProp)\n\n  sortedData = refineData(dataProp, max, height, gap)\n  return {\n    sortedData: sortedData,\n    max: max,\n    selectedIndex: null,\n    nowHeight: 200,\n    nowWidth: 200,\n    scrollPosition: 0,\n    nowX: 0,\n    nowY: 0,\n    guideArray: guideArray\n  }\n}\n\nexport const refineData = (flattenData, max, height, gap) => {\n  let result = []\n\n  flattenData.map((series) => {\n    let dataProp = series.data\n    let object = {\n      seriesName: series.seriesName,\n      seriesColor: series.color\n    }\n    let data = []\n    let length = dataProp.length\n    let simpleTypeCount = 0\n    let objectTypeCount = 0\n\n    for (let i = 0; i < length; i++) {\n      let maxClone = max\n\n      if (maxClone === 0) {\n        maxClone = 1\n      }\n      let dataObject = {}\n\n      if (typeof dataProp[i] === 'number') {\n        simpleTypeCount++\n        dataObject.ratioY = dataProp[i] / maxClone * height\n        dataObject.y = dataProp[i]\n        dataObject = {\n          gap: i * gap,\n          ratioY: dataProp[i] / maxClone * height,\n          y: dataProp[i]\n        }\n      } else if (typeof dataProp[i] === 'object') {\n        let isEmpty = false\n        if (dataProp[i].y === null) {\n          let nullCount = 0\n          for (let j = i; j < dataProp.length; j++) {\n            if (dataProp[j].y) {\n              break\n            } else {\n              nullCount++\n            }\n          }\n          dataProp[i].y = dataProp[i - 1].y + (dataProp[i + nullCount].y - dataProp[i - 1].y) / (nullCount + 1)\n          isEmpty = true\n          /* if (dataProp[i + 1] && dataProp[i - 1]) {\n            dataProp[i].y = (dataProp[i - 1].y + dataProp[i + 1].y) / 2\n            isEmpty = true\n          } */\n        }\n        if (typeof dataProp[i].y === 'number' && dataProp[i].x) {\n          objectTypeCount++\n          dataObject = {\n            gap: i * gap,\n            ratioY: dataProp[i].y / maxClone * height,\n            x: dataProp[i].x,\n            y: dataProp[i].y,\n            isEmpty: isEmpty\n          }\n        }\n      }\n      data.push(dataObject)\n    }\n\n    // validation\n    let isValidate = false\n    if (simpleTypeCount === length || objectTypeCount === length) {\n      isValidate = true\n    }\n\n    if (isValidate) {\n      object.data = data.sort((a, b) => {\n        return a['gap'] - b['gap']\n        // return a[0] - b[0]\n      })\n    } else {\n      object.data = []\n    }\n\n    result.push(object)\n  })\n\n  return result\n}\n\nexport const getGuideArray = (max, height, numberOfPoints = 5) => {\n  let x = parseInt(max)\n\n  let arr = []\n  let length\n  let temp\n  let postfix = ''\n\n  if (x === 0) {\n    return []\n  }\n\n  if (x > -1 && x < 1000) {\n    x = Math.round(x * 10)\n    temp = 1\n  } else if (x >= 1000 && x < 1000000) {\n    postfix = 'K'\n    x = Math.round(x / 100)\n    temp = 1000\n  } else if (x >= 1000000 && x < 1000000000) {\n    postfix = 'M'\n    x = Math.round(x / 100000)\n    temp = 1000000\n  } else {\n    postfix = 'B'\n    x = Math.round(x / 100000000)\n    temp = 1000000000\n  }\n  length = x.toString().length\n\n  x = _.round(x, -1 * length + 1) / 10\n  let first = parseInt(x.toString()[0])\n\n  if (first > -1 && first < 3) { // 1,2\n    x = 2.5 * x / first\n  } else if (first > 2 && first < 6) { // 4,5\n    x = 5 * x / first\n  } else {\n    x = 10 * x / first\n  }\n\n  for (let i = 1; i < numberOfPoints + 1; i++) {\n    let v = x / numberOfPoints * i\n    arr.push([v + postfix, v * temp / max * height, 1 * temp / max * height])\n  }\n\n  return arr\n}\n\nexport const drawYAxis = (color = '#e0e0e0') => {\n  return (\n    <View style={{\n      borderRightWidth: 1,\n      borderColor: color,\n      width: 1,\n      height: '100%',\n      marginRight: 0\n\n    }} />\n\n  )\n}\n\nexport const drawYAxisLabels = (arr, height, minValue, color = '#000000') => {\n  return (\n    <View style={{\n      width: 33,\n      height: height,\n      justifyContent: 'flex-end',\n      alignItems: 'flex-end',\n      marginBottom: minValue && arr && arr.length > 0 ? -1 * arr[0][2] * minValue : null,\n      overflow: 'hidden'\n    }}>\n\n      {arr.length === 0 ? (\n        <View\n          key={'guide0'}\n          style={{\n            bottom: 0,\n            position: 'absolute'\n          }}>\n          <Text style={{fontSize: 11}}>0</Text>\n        </View>\n      ) : arr.map((v, i) => {\n        if (v[1] > height) return null\n        return (\n          <View\n            key={'guide' + i}\n            style={{\n              bottom: v[1] - 5,\n              position: 'absolute'\n            }}>\n            <Text style={{fontSize: 11, color: color}}>{v[0]}</Text>\n          </View>\n        )\n      })}\n\n    </View>\n  )\n}\nexport const drawGuideLine = (arr, color = '#e0e0e0') => {\n  return (\n    <View style={{\n      width: '100%',\n      height: '100%',\n      position: 'absolute'\n    }}>\n\n      {arr.map((v, i) => {\n        return (\n          <View\n            key={'guide' + i}\n            style={{\n              width: '100%',\n              borderTopWidth: 1,\n              borderTopColor: color,\n              bottom: v[1],\n              position: 'absolute'\n            }} />\n        )\n      })}\n\n    </View>\n  )\n}\n\nexport const numberWithCommas = (x, summary = true) => {\n  let postfix = ''\n  if (summary) {\n    if (x >= 1000 && x < 1000000) {\n      postfix = 'K'\n      x = Math.round(x / 100) / 10\n    } else if (x >= 1000000 && x < 1000000000) {\n      postfix = 'M'\n      x = Math.round(x / 100000) / 10\n    } else if (x >= 1000000000 && x < 1000000000000) {\n      postfix = 'B'\n      x = Math.round(x / 100000000) / 10\n    }\n  }\n\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',') + postfix\n}\n\nexport const drawXAxis = (color = '#e0e0e0') => {\n  return (\n    <View style={{\n      width: '100%',\n      borderTopWidth: 1,\n      borderTopColor: color\n    }} />\n  )\n}\nexport const drawXAxisLabels = (sortedData, gap, color = '#000000', showEvenNumberXaxisLabel) => {\n  return (\n    <View style={{\n      width: '100%',\n      paddingVertical: 10,\n      height: 10\n    }}>\n      {sortedData.map((data, i) => {\n        // if (data[3] && i % 2 === 1) {\n        if (data['x'] && i % 2 === 1 || !showEvenNumberXaxisLabel) {\n          return (\n            <View key={'label' + i} style={{\n              position: 'absolute',\n              // left: data[0] - gap / 2,\n              left: data['gap'] - gap / 2,\n              width: gap,\n              alignItems: 'center'\n            }}>\n              <Text style={{fontSize: 9, color: color}}>\n                {\n                  // data[3]\n                  data['x']\n                }\n              </Text>\n            </View>\n          )\n        } else {\n          return null\n        }\n      })}\n    </View>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}